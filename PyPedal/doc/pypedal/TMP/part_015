<tex2html_file>#./appendix.tex#
\appendix
\addcontentsline<<3283>>toc<<3283>><<3284>>chapter<<3284>><<3285>>Appendices<<3285>>
\chapter<<3286>>Example Programs<<3286>>\label<<3287>>cha:example-programs<<3287>>\index<<3288>>example programs<<3288>>
\begin<<3289>>quote<<3289>>
 Either I've invented a whole new logic or, ahem, I'm not playing with a full deck. --- Philip K. Dick
\end<<3290>>quote<<3290>>
\begin<<3447>>tex2html_deferred<<3447>>\par\end<<3448>>tex2html_deferred<<3448>>
A number of example programs are distributed with PyPedal<<3291>><<3291>>. Table \ref<<3292>>tbl:examples-program-list<<3292>> provides the name of each file, the configuration and pedigree files used by those programs, and a brief description of the concepts and techniques presented.
\begin<<3293>>center<<3293>>
    \tablecaption<<3428>>Example programs distributed with PyPedal<<3294>><<3294>>.<<3428>>
    \tablefirsthead<<3295>>\hline Program Name ;SPMamp; Configuration File ;SPMamp; Pedigree File ;SPMamp; Description \\  \hline<<3295>>
    \begin<<3449>>tex2html_deferred<<3449>>\tablehead<<3296>>\hline Program Name ;SPMamp; Configuration File ;SPMamp; Pedigree File ;SPMamp; Description \\  \hline<<3296>>\end<<3450>>tex2html_deferred<<3450>>
    \begin<<3451>>tex2html_deferred<<3451>>\tabletail<<3429>>\hline \multicolumn<<3297>>4<<3297>><<3298>>l<<3298>><<3299>>\small\sl continued on next page<<3299>> \\  \hline<<3429>>\end<<3452>>tex2html_deferred<<3452>>
    \tablelasttail<<3300>>\hline<<3300>>
    \label<<3301>>tbl:examples-program-list<<3301>>
    \begin<<3302>>xtabular<<3302>><<3430>>l|p<<3303>>1in<<3303>>|p<<3304>>1in<<3304>>|p<<3305>>3in<<3305>><<3430>>
    new\_amatrix.py ;SPMamp; new\_amatrix.ini ;SPMamp; new\_amatrix.ped ;SPMamp; Create, save, load, and view information about NewAMatrix objects \\ 
    new\_classes.py ;SPMamp; new\_classes.ini ;SPMamp; boichard2.ped ;SPMamp; ??? \\ 
    new\_db.py ;SPMamp; new\_db.ini ;SPMamp; hartlandclark.ped ;SPMamp; Loading a pedigree into SQLite and creating a report of mean inbreeeding by birth year \\ 
    new\_decompose.py ;SPMamp; new\_decompose.ini ;SPMamp; new_decompose.ped ;SPMamp; Use of numerator relationship matrix decomposition subroutines in \module<<3306>>pyp_nrm<<3306>> \\ 
    new\_doug.py ;SPMamp; new\_doug.ini ;SPMamp; doug.ped ;SPMamp; Reading a pedigree in which names are strings, drawing pedigrees \\ 
    new\_format.py ;SPMamp; new\_format.ini ;SPMamp; boichard2a.ped ;SPMamp; Reading a pedigree using the `skip column' format code (Z), printing pedigree metadata \\ 
    new\_graphics.py ;SPMamp; new\_graphics.ini ;SPMamp; boichard2.ped ;SPMamp; Use of a number of routines from \module<<3307>>pyp_graphics<<3307>> \\ 
    new\_hartl.py ;SPMamp; new\_hartl.ini ;SPMamp; hartlandclark.ped ;SPMamp; Demonstrates use of \function<<3308>>pyp_graphics.draw_pedigree()<<3308>> \\ 
    new\_ids.py ;SPMamp; new\_ids.ini ;SPMamp; new\_ids2.ped ;SPMamp; Demonstrates reading tab-delimited files, using strings as animal IDs, overriding the default missing parent code, printing animal records \\ 
    new\_inbreeding.py ;SPMamp; new\_inbreeding.ini ;SPMamp; new\_renumbering.ped ;SPMamp; Calculating coefficients of inbreeding \\ 
    new\_inbreeding2.py ;SPMamp; new\_inbreeding2.ini, new\_inbreeding2multiple.ini ;SPMamp; new\_renumbering.ped, horse.ped ;SPMamp; Advanced .ini file techniques, computations on extremely inbred animals, calculation of summary statistics for coefficients of relationship \\ 
    new\_jbc.py ;SPMamp; new\_jbc.ini ;SPMamp; new\_ids2.ped ;SPMamp; Using \function<<3309>>pyp_jbc.color_pedigree()<<3309>> to produce a weighted, colored pedigree \\ 
    new\_lacy.py ;SPMamp; new\_lacy.ini, new\_format.ini ;SPMamp; new\_lacy.ped, boichard2a.ped ;SPMamp; Calculating effective ancestor and founder numbers \\ 
    new\_methods.py ;SPMamp; new\_format.ini ;SPMamp; boichard2a.ped ;SPMamp; Use of \function<<3310>>pyp_metrics.related\_animals()<<3310>> and \function<<3311>>pyp_metrics.common\_ancestors()<<3311>> \\ 
    new\_networkx.py ;SPMamp; new\_networkx.ini ;SPMamp; generations.ped ;SPMamp; Use of [algebraic] graph functions \\ 
    new\_options.py ;SPMamp; new\_options.ini ;SPMamp; new\_lacy.ped ;SPMamp; Use of the configuration files \\ 
    new\_renumbering.py ;SPMamp; new\_renumbering.ini ;SPMamp; new\_renumbering.ped ;SPMamp; Renumbering a pedigree, calculating inbreeding, pedigree drawing \\ 
    new\_reporting.py ;SPMamp; new\_reporting.ini ;SPMamp; new\_renumbering.ped ;SPMamp; Use of reporting functions \\ 
    new\_simulate.py ;SPMamp; new\_simulate.ini ;SPMamp; None ;SPMamp; Demonstrates how to create a random pedigree and produce a drawing of that pedigree \\ 
    new\_sqlite.py ;SPMamp; None ;SPMamp; None ;SPMamp; Demonstrates the use of textstreams and an SQLite database \\ 
    \end<<3312>>xtabular<<3312>>
\end<<3313>>center<<3313>>
\begin<<3453>>tex2html_deferred<<3453>>\par\end<<3454>>tex2html_deferred<<3454>>
\chapter<<3314>>GEDCOM File Handling<<3314>>\label<<3315>>GEDCOM<<3315>>\index<<3316>>GEDCOM files<<3316>>
PyPedal<<3317>><<3317>> is capable of importing from, and exporting to, GEDCOM 5.5 files using a subset
of data record and tag types from the standard (Table 
\ref<<3318>>tbl:gedcom-supported-records-and-tags-import,tbl:gedcom-supported-records-and-tags-export<<3318>>).
Most of the information that can be
 exchanged in GEDCOM files has no direct use in PyPedal<<3319>><<3319>>, so important information from PyPedal<<3320>><<3320>>'s point-of-view is not lost. However, it's important to note that \textbf<<3431>>PyPedal<<3321>><<3321>>'s GEDCOM import and export is lossy<<3431>>! This means that information in a GEDCOM file is lost when importing the file, and data from PyPedal<<3322>><<3322>> pedigrees is lost when exporting. There are many free and commercial packages for doing human genealogy that take full advantage of GEDCOM, so you might want to look at one if you need more advanced GEDCOM support than PyPedal<<3323>><<3323>> provides.
\begin<<3324>>center<<3324>>
    \tablecaption<<3432>>GEDCOM 5.5 data records and tags imported by PyPedal<<3325>><<3325>>.<<3432>>
    \tablefirsthead<<3433>>\hline Data Record Type ;SPMamp; Supported Tags ;SPMamp; Description\begin<<3455>>tex2html_deferred<<3455>>\footnote<<3326>><<3326>>\end<<3456>>tex2html_deferred<<3456>> \\  \hline<<3433>>
    \begin<<3457>>tex2html_deferred<<3457>>\tablehead<<3434>>\hline Data Record Type ;SPMamp; Supported Tags ;SPMamp; Description\footnote<<3327>><<3327>> \\  \hline<<3434>>\end<<3458>>tex2html_deferred<<3458>>
    \begin<<3459>>tex2html_deferred<<3459>>\tabletail<<3435>>\hline \multicolumn<<3328>>3<<3328>><<3329>>l<<3329>><<3330>>\small\sl continued on next page<<3330>> \\  \hline<<3435>>\end<<3460>>tex2html_deferred<<3460>>
    \tablelasttail<<3331>>\hline<<3331>>
    \label<<3332>>tbl:gedcom-supported-records-and-tags-import<<3332>>
    \begin<<3333>>xtabular<<3333>><<3436>>l|p<<3334>>1in<<3334>>|p<<3335>>3in<<3335>><<3436>>
    Fam_Record ;SPMamp; <<3336>>FAM<<3336>> ;SPMamp; Alphanumeric with underscores; formed from parent IDs \\ 
     ;SPMamp; <<3337>>HUSB<<3337>> ;SPMamp; Sire, if known \\ 
     ;SPMamp; <<3338>>WIFE<<3338>> ;SPMamp; Dam, if known \\ 
     ;SPMamp; <<3339>>CHIL<<3339>> ;SPMamp; Pointer to Individual_Record (one record per child) \\ 
    Individual_Record ;SPMamp; <<3340>>INDI<<3340>> ;SPMamp; Individual ID \\ 
     ;SPMamp; SEX ;SPMamp; M, F, or U (unknown) \\ 
     ;SPMamp; NAME ;SPMamp; Individual's name, if known \\ 
     ;SPMamp; BIRT ;SPMamp; Indicates that a birth date or year follows \\ 
     ;SPMamp; DATE ;SPMamp; Birth date or birth year, if known \\ 
     ;SPMamp; FAMC ;SPMamp; Pointer to family to which this individual belongs \\ 
     ;SPMamp; FAMS ;SPMamp; Pointer to family in which this individual is a parent \\ 
    \end<<3341>>xtabular<<3341>>
\end<<3342>>center<<3342>>
The list of recognized tags is hard-coded in a list named \var<<3343>>known\_tags<<3343>> in \function<<3344>>pyp\_io.load\_from\_gedcom()<<3344>>.
\begin<<3345>>center<<3345>>
    \tablecaption<<3437>>GEDCOM 5.5 data records and tags exported by PyPedal<<3346>><<3346>>.<<3437>>
    \tablefirsthead<<3438>>\hline Data Record Type ;SPMamp; Supported Tags ;SPMamp; Description\begin<<3461>>tex2html_deferred<<3461>>\footnote<<3347>><<3347>>\end<<3462>>tex2html_deferred<<3462>> \\  \hline<<3438>>
    \begin<<3463>>tex2html_deferred<<3463>>\tablehead<<3439>>\hline Data Record Type ;SPMamp; Supported Tags ;SPMamp; Description\footnote<<3348>><<3348>> \\  \hline<<3439>>\end<<3464>>tex2html_deferred<<3464>>
    \begin<<3465>>tex2html_deferred<<3465>>\tabletail<<3440>>\hline \multicolumn<<3349>>3<<3349>><<3350>>l<<3350>><<3351>>\small\sl continued on next page<<3351>> \\  \hline<<3440>>\end<<3466>>tex2html_deferred<<3466>>
    \tablelasttail<<3352>>\hline<<3352>>
    \label<<3353>>tbl:gedcom-supported-records-and-tags-export<<3353>>
    \begin<<3354>>xtabular<<3354>><<3441>>l|p<<3355>>1in<<3355>>|p<<3356>>3in<<3356>><<3441>>
    Header ;SPMamp; <<3357>>HEAD<<3357>> ;SPMamp; --- \\ 
     ;SPMamp; <<3358>>SOUR<<3358>> ;SPMamp; <<3359>>PYPEDAL<<3359>> \\ 
     ;SPMamp; <<3360>>VERS<<3360>> ;SPMamp; V2.0 \\ 
     ;SPMamp; <<3361>>CORP<<3361>> ;SPMamp; <<3362>>USDA-ARS-BA-ANRI-AIPL<<3362>> \\ 
     ;SPMamp; <<3363>>DEST<<3363>> ;SPMamp; <<3364>>PYPEDAL<<3364>> \\ 
     ;SPMamp; <<3365>>DATE<<3365>> ;SPMamp; Timestamp from time of file creation \\ 
     ;SPMamp; <<3366>>FILE<<3366>> ;SPMamp; Filename provided by user \\ 
     ;SPMamp; <<3367>>GEDC<<3367>> ;SPMamp; --- \\ 
     ;SPMamp; <<3368>>VERS<<3368>> ;SPMamp; <<3369>>VERS 5.5<<3369>> \\ 
     ;SPMamp; <<3370>>FORM<<3370>> ;SPMamp; Lineage-Linked \\ 
     ;SPMamp; <<3371>>CHAR<<3371>> ;SPMamp; <<3372>>ASCII<<3372>> \\ 
    Fam_Record ;SPMamp; <<3373>>FAM<<3373>> ;SPMamp; Alphanumeric with underscores; formed from parent IDs \\ 
     ;SPMamp; <<3374>>HUSB<<3374>> ;SPMamp; Sire, if known \\ 
     ;SPMamp; <<3375>>WIFE<<3375>> ;SPMamp; Dam, if known \\ 
     ;SPMamp; <<3376>>CHIL<<3376>> ;SPMamp; Pointer to Individual_Record (one record per child) \\ 
    Individual_Record ;SPMamp; <<3377>>INDI<<3377>> ;SPMamp; Individual ID \\ 
     ;SPMamp; SEX ;SPMamp; M, F, or U (unknown) \\ 
     ;SPMamp; NAME ;SPMamp; Individual's name, if known \\ 
     ;SPMamp; BIRT ;SPMamp; Indicates that a birth date or year follows \\ 
     ;SPMamp; DATE ;SPMamp; Birth date or birth year, if known \\ 
     ;SPMamp; FAMC ;SPMamp; Pointer to family to which this individual belongs \\ 
     ;SPMamp; FAMS ;SPMamp; Pointer to family in which this individual is a parent \\ 
    \end<<3378>>xtabular<<3378>>
\end<<3379>>center<<3379>>
Some tags have slightly different connotatios in PyPedal<<3380>><<3380>> than in <<3381>>GEDCOM<<3381>>. For example, in human genealogy marriages are important events, but that is not the case in animal pedigrees. PyPedal<<3382>><<3382>> creates family records only for unique mating pairs, and marriage information is lost when importing a <<3383>>GEDCOM<<3383>> file. Similarly, no marriage information is exported, and you will not see any family records containing only HUSB and WIFE tags. Founders (animals with both parents unknown) will have individual records but no family records. The default birth year used by PyPedal<<3384>><<3384>> is 1900; if you do not override that value then individuals with birth years of 1900 will not have BIRT/DATE tags written to their individual record. The same is true of default birth dates (01011900).
\begin<<3467>>tex2html_deferred<<3467>>\par\end<<3468>>tex2html_deferred<<3468>>
Importation is done by reading the <<3385>>GEDCOM<<3385>> file, parsing out the supported tags into ``family'' and ``individual'', and using Python dictionaries (hash tables) to map everything down to individual records. Those individual records are then written to a file, the pedigree format string and pedfile variables are updated for the new file. That file is then loaded automatically. The downside is that you end up with two copies of each pedigree file, but disc space is cheap. I won't add an option for automatic deletion of the original <<3386>>GEDCOM<<3386>> file becuase of the lossiness of the import procedure.
\begin<<3469>>tex2html_deferred<<3469>>\par\end<<3470>>tex2html_deferred<<3470>>
The export process is uncoupled from the import process. You can export any pedigree 
that PyPedal<<3387>><<3387>> can read as a <<3388>>GEDCOM<<3388>> file regardless of the original source. Perhaps
some human types will be interested in some of the calculations that PyPedal<<3389>><<3389>> can do,
or perhaps a dog breeder will do something unexpected, such as exporting to <<3390>>GEDCOM<<3390>> so
that they can use GRAMPS or something like that to manipulate their data. Who knows. Anyway, PyPedal<<3391>><<3391>> supports two-way data flow.
\begin<<3471>>tex2html_deferred<<3471>>\par\end<<3472>>tex2html_deferred<<3472>>
\chapter<<3392>>GENES File Handling<<3392>>\label<<3393>>GENES<<3393>>\index<<3394>>GENES files<<3394>>
PyPedal is capable of importing from, and exporting to, the dBase III file format used by Robert Lacy's GENES 1.20
program (\begin<<3473>>tex2html_deferred<<3473>>\url<<3395>>http://www.vortex9.org/genes.html<<3395>>\end<<3474>>tex2html_deferred<<3474>>). The code that does the actual conversion is a modified version
of ;SPMquot;Recipe 362715: DBF reader and writer (Python);SPMquot; (\begin<<3475>>tex2html_deferred<<3475>>\url<<3396>>http://code.activestate.com/recipes/362715/<<3396>>\end<<3476>>tex2html_deferred<<3476>>) by Raymond
Hettinger. The changes I've made were mostly mappings between GENES and PyPedal<<3397>><<3397>> variables, as well as some code
to catch potential errors on the inputs and outputs. It is my understanding that the PSF under which Hettinger's
code was released is compatible with the GPL, under which PyPedal<<3398>><<3398>> is licensed.
\begin<<3477>>tex2html_deferred<<3477>>\par\end<<3478>>tex2html_deferred<<3478>>
As one might expect, PyPedal<<3399>><<3399>> supports only a subset of the data contained in a GENES studbook file. That is because
some of the metrics calculated by GENES do not have corresponding quantities in PyPedal<<3400>><<3400>>. (Table
\ref<<3401>>tbl:genes-supported-records-and-tags<<3401>>). It's important to note that PyPedal<<3402>><<3402>>'s GENES import and export is
lossy! This means that information in a GENES file is lost when importing the file, and data from PyPedal<<3403>><<3403>> pedigrees
are lost when exporting.
\begin<<3404>>center<<3404>>
    \tablecaption<<3442>>GENES 1.20 data records and tags exported by PyPedal<<3405>><<3405>>.<<3442>>
    \tablefirsthead<<3443>>\hline Data Field ;SPMamp; PyPedal<<3406>><<3406>> Variable ;SPMamp; Description\begin<<3479>>tex2html_deferred<<3479>>\footnote<<3407>><<3407>>\end<<3480>>tex2html_deferred<<3480>> \\  \hline<<3443>>
    \begin<<3481>>tex2html_deferred<<3481>>\tablehead<<3444>>\hline Data Field ;SPMamp; PyPedal<<3408>><<3408>> Variable ;SPMamp; Description\footnote<<3409>><<3409>> \\  \hline<<3444>>\end<<3482>>tex2html_deferred<<3482>>
    \begin<<3483>>tex2html_deferred<<3483>>\tabletail<<3445>>\hline \multicolumn<<3410>>3<<3410>><<3411>>l<<3411>><<3412>>\small\sl continued on next page<<3412>> \\  \hline<<3445>>\end<<3484>>tex2html_deferred<<3484>>
    \tablelasttail<<3413>>\hline<<3413>>
    \label<<3414>>tbl:genes-supported-records-and-tags<<3414>>
    \begin<<3415>>xtabular<<3415>><<3446>>l|p<<3416>>1in<<3416>>|p<<3417>>3in<<3417>><<3446>>
    STUD ID ;SPMamp; animalID ;SPMamp; Alphanumeric animal ID, converted to integer ID \\ 
     ;SPMamp; originalID ;SPMamp; Alphanumeric animal ID stored as string \\ 
    SIRE ID ;SPMamp; sireName ;SPMamp; Alphanumeric sire ID, if known \\ 
    DAM ID ;SPMamp; damName ;SPMamp; Alphanumeric dam ID, if known \\ 
    BDATE ;SPMamp; bd ;SPMamp; Animal birthdate \\ 
    SEX ;SPMamp; sex ;SPMamp; Mapped from 0/1 to f/m \\ 
    LOCATION ;SPMamp; originalHerd ;SPMamp; Location of animal, if known \\ 
    DEAD ;SPMamp; alive ;SPMamp; Mapped from 0/1 to 1/0 \\ 
    INBREED ;SPMamp; fa ;SPMamp; Coefficient of inbreeding \\ 
    AGE ;SPMamp; age ;SPMamp; Age of animal \\ 
    \end<<3418>>xtabular<<3418>>
\end<<3419>>center<<3419>>
Some tags have slightly different connotatios in PyPedal<<3420>><<3420>> than in GENES. For example, GENES distinguished between
animals that are known to be founders (parents are ;SPMquot;WILD;SPMquot;) and those with unknown parents that are assumed to be
from the current population (parents are ;SPMquot;UNK;SPMquot;). PyPedal<<3421>><<3421>> does not make such a distinction, and treats all animals
with unknown parents as founders. The default birthdate (01011900) used by PyPedal<<3422>><<3422>> also may not make particular
sense to GENES users.
\begin<<3485>>tex2html_deferred<<3485>>\par\end<<3486>>tex2html_deferred<<3486>>
Importation is done by reading the GENES file and mapping the supported fields to their corresponding PyPedal<<3423>><<3423>>
attributes. Those individual records are then written to a file, the pedigree format string and pedfile variables are
updated for the new file, and that file is then loaded automatically. The downside is that you end up with two copies
of each pedigree file, but disc space is cheap. I won't add an option for automatic deletion of the original GENES file
because of the lossiness of the import procedure.
\begin<<3487>>tex2html_deferred<<3487>>\par\end<<3488>>tex2html_deferred<<3488>>
The export process is uncoupled from the import process. You can export any pedigree that PyPedal<<3424>><<3424>> can read as a
GENES file, regardless of the original source. Claire Raisin (Durrell Institute of Conservation and Ecology, University
of Kent) asked for this feature quite a long time ago, and I finally got around to adding it. I hope that late is better than
never.
<tex2html_endfile>#./appendix.tex#
\begin<<3489>>tex2html_deferred<<3489>>\par\end<<3490>>tex2html_deferred<<3490>>
\bibliographystyle<<3425>>chicago<<3425>>
\bibliography<<3426>>references<<3426>>
\begin<<3491>>tex2html_deferred<<3491>>\par\end<<3492>>tex2html_deferred<<3492>>
\printindex
\printindex[func]
\begin<<3493>>tex2html_deferred<<3493>>\par\end<<3494>>tex2html_deferred<<3494>>
\end<<3427>>document<<3427>>
