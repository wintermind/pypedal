graph UML {
  nodesep=0.3;
  color="black"
  bgcolor="white"
  node [fontsize=10];

    // class _TakeUFunc 
    _TakeUFunc [fillcolor="", shape="record", style="", label="{_TakeUFunc\n|_cache: dict\l_cfuncs: dict\l_coercions: dict\l_promotionExclusions: dict\l_typerank: list\l|_organize_cfuncs: dict\l__init__: None\l}"];
      _TakeUFunc -- _ChooseUFunc [arrowhead=empty];
      _TakeUFunc -- int [arrowtail=odiamond];
      _TakeUFunc -- list [arrowtail=odiamond];
      _TakeUFunc -- str [arrowtail=odiamond];
      _TakeUFunc -- None [arrowtail=odiamond];
      _TakeUFunc -- dict [arrowtail=odiamond];
       _TakeUFunc -- dict [arrowtail=diamond];
       _TakeUFunc -- list [arrowtail=diamond];

    // class _PutUFunc 
    _PutUFunc [fillcolor="", shape="record", style="", label="{_PutUFunc\n|_cache: dict\l_cfuncs: dict\l_coercions: dict\l_promotionExclusions: dict\l_typerank: list\l|_organize_cfuncs: dict\l__init__: None\l}"];
      _PutUFunc -- _TakeUFunc [arrowhead=empty];
      _PutUFunc -- int [arrowtail=odiamond];
      _PutUFunc -- list [arrowtail=odiamond];
      _PutUFunc -- str [arrowtail=odiamond];
      _PutUFunc -- None [arrowtail=odiamond];
      _PutUFunc -- dict [arrowtail=odiamond];
       _PutUFunc -- dict [arrowtail=diamond];
       _PutUFunc -- list [arrowtail=diamond];

    // class Pattern 
    Pattern [fillcolor="", shape="record", style="", label="{Pattern\n|flags: int\lgroupdict: dict\lgroups: int\lopen: list\lstr: str\l|opengroup: int\l__init__: None\lclosegroup: None\l}"];
      Pattern -- str [arrowtail=odiamond];
      Pattern -- int [arrowtail=odiamond];
      Pattern -- None [arrowtail=odiamond];
       Pattern -- dict [arrowtail=diamond];
       Pattern -- list [arrowtail=diamond];
       Pattern -- int [arrowtail=diamond];
       Pattern -- str [arrowtail=diamond];

    // class BooleanType 
    BooleanType [fillcolor="", shape="record", style="", label="{BooleanType\n|_conv: TypeConverter\l|__init__: None\l}"];
      BooleanType -- NumericType [arrowhead=empty];
      BooleanType -- int [arrowtail=odiamond];
      BooleanType -- str [arrowtail=odiamond];
       BooleanType -- TypeConverter [arrowtail=diamond];

    // class AnyType 
    AnyType [fillcolor="", shape="record", style="", label="{AnyType\n|_conv: None\l|__init__: None\l}"];
      AnyType -- NumericType [arrowhead=empty];
      AnyType -- None [arrowtail=odiamond];
      AnyType -- int [arrowtail=odiamond];
      AnyType -- str [arrowtail=odiamond];
       AnyType -- None [arrowtail=diamond];

    // class Formatter 
    Formatter [fillcolor="", shape="record", style="", label="{Formatter\n|_fmt: str\ldatefmt: None\l|__init__: None\l}"];
      Formatter -- None [arrowtail=odiamond];
       Formatter -- None [arrowtail=diamond];
       Formatter -- str [arrowtail=diamond];

    // class _BufferPool 
    _BufferPool [fillcolor="", shape="record", style="", label="{_BufferPool\n|buffers: list\l|setBufferSize: int\l__init__: None\l}"];
      _BufferPool -- int [arrowtail=odiamond];
       _BufferPool -- list [arrowtail=diamond];

    // class SignedIntegralType 
    SignedIntegralType [fillcolor="", shape="record", style="", label="{SignedIntegralType\n|_conv: TypeConverter\l|__init__: None\l}"];
      SignedIntegralType -- IntegralType [arrowhead=empty];
      SignedIntegralType -- SignedType [arrowhead=empty];
      SignedIntegralType -- int [arrowtail=odiamond];
      SignedIntegralType -- str [arrowtail=odiamond];
       SignedIntegralType -- TypeConverter [arrowtail=diamond];

    // class UnsignedIntegralType 
    UnsignedIntegralType [fillcolor="", shape="record", style="", label="{UnsignedIntegralType\n|_conv: TypeConverter\l|__init__: None\l}"];
      UnsignedIntegralType -- IntegralType [arrowhead=empty];
      UnsignedIntegralType -- UnsignedType [arrowhead=empty];
      UnsignedIntegralType -- int [arrowtail=odiamond];
      UnsignedIntegralType -- str [arrowtail=odiamond];
       UnsignedIntegralType -- TypeConverter [arrowtail=diamond];

    // class Random 
    Random [fillcolor="", shape="record", style="", label="{Random\n|gauss_next: None\l|seed: None\l__init__: None\l}"];
      Random -- Random [arrowhead=empty];
      Random -- None [arrowtail=odiamond];
      Random -- long [arrowtail=odiamond];
       Random -- None [arrowtail=diamond];

    // class TypeConverter 
    TypeConverter [fillcolor="", shape="record", style="", label="{TypeConverter\n|asPyValue: None\lastype: dict\lfromPyValue: None\lname: str\l|__init__: None\l}"];
      TypeConverter -- str [arrowtail=odiamond];
      TypeConverter -- dict [arrowtail=odiamond];
       TypeConverter -- None [arrowtail=diamond];
       TypeConverter -- str [arrowtail=diamond];
       TypeConverter -- dict [arrowtail=diamond];

    // class ObjectType 
    ObjectType [fillcolor="", shape="record", style="", label="{ObjectType\n|_conv: None\l|__init__: None\l}"];
      ObjectType -- NumericType [arrowhead=empty];
      ObjectType -- None [arrowtail=odiamond];
      ObjectType -- int [arrowtail=odiamond];
      ObjectType -- str [arrowtail=odiamond];
       ObjectType -- None [arrowtail=diamond];

    // class _Condition 
    _Condition [fillcolor="", shape="record", style="", label="{_Condition\n|_Condition__lock: None\l_Condition__waiters: list\l_Verbose__verbose: bool\lacquire: builtin_function_or_method\lrelease: builtin_function_or_method\l|__init__: None\l}"];
      _Condition -- _Verbose [arrowhead=empty];
      _Condition -- None [arrowtail=odiamond];
      _Condition -- bool [arrowtail=odiamond];
       _Condition -- bool [arrowtail=diamond];
       _Condition -- None [arrowtail=diamond];
       _Condition -- builtin_function_or_method [arrowtail=diamond];
       _Condition -- list [arrowtail=diamond];

    // class _NumErrorMode 
    _NumErrorMode [fillcolor="", shape="record", style="", label="{_NumErrorMode\n|dividebyzero: str\linvalid: str\loverflow: str\lunderflow: str\l|_num_mode_test: int\l__init__: None\l}"];
      _NumErrorMode -- str [arrowtail=odiamond];
      _NumErrorMode -- None [arrowtail=odiamond];
      _NumErrorMode -- int [arrowtail=odiamond];
       _NumErrorMode -- str [arrowtail=diamond];

    // class NumError 
    NumError [fillcolor="", shape="record", style="", label="{NumError\n|_defaultmode: _NumErrorMode\l_modestack: dict\l|setMode: None\l__init__: None\l_getmodestack: list\l_setmodes: None\l}"];
      NumError -- str [arrowtail=odiamond];
      NumError -- None [arrowtail=odiamond];
      NumError -- _NumErrorMode [arrowtail=odiamond];
      NumError -- list [arrowtail=odiamond];
      NumError -- int [arrowtail=odiamond];
       NumError -- _NumErrorMode [arrowtail=diamond];
       NumError -- dict [arrowtail=diamond];

    // class FloatingType 
    FloatingType [fillcolor="", shape="record", style="", label="{FloatingType\n|_conv: TypeConverter\l|__init__: None\l}"];
      FloatingType -- NumericType [arrowhead=empty];
      FloatingType -- float [arrowtail=odiamond];
      FloatingType -- int [arrowtail=odiamond];
      FloatingType -- str [arrowtail=odiamond];
       FloatingType -- TypeConverter [arrowtail=diamond];

    // class _BinaryUFunc 
    _BinaryUFunc [fillcolor="", shape="record", style="", label="{_BinaryUFunc\n|_cache: dict\l_cfuncs: dict\l_coercions: dict\l_promotionExclusions: dict\l_typerank: list\l|__init__: None\l_organize_cfuncs: dict\l_evaltypes: tuple\l?: BooleanType,ComplexType,FloatingType,SignedIntegralType,UnsignedIntegralType\l_sort_typesigs: list\l}"];
      _BinaryUFunc -- _UFunc [arrowhead=empty];
      _BinaryUFunc -- int [arrowtail=odiamond];
      _BinaryUFunc -- dict [arrowtail=odiamond];
      _BinaryUFunc -- str [arrowtail=odiamond];
      _BinaryUFunc -- tuple [arrowtail=odiamond];
      _BinaryUFunc -- list [arrowtail=odiamond];
      _BinaryUFunc -- UnsignedIntegralType [arrowtail=odiamond];
      _BinaryUFunc -- ComplexType [arrowtail=odiamond];
      _BinaryUFunc -- SignedIntegralType [arrowtail=odiamond];
      _BinaryUFunc -- FloatingType [arrowtail=odiamond];
      _BinaryUFunc -- BooleanType [arrowtail=odiamond];
      _BinaryUFunc -- None [arrowtail=odiamond];
       _BinaryUFunc -- dict [arrowtail=diamond];
       _BinaryUFunc -- list [arrowtail=diamond];

    // class UFuncCodeGenerator 
    UFuncCodeGenerator [fillcolor="", shape="record", style="", label="{UFuncCodeGenerator\n|config: list\lheader: str\lmodule_methods: str\lseparator: str\ltail: str\l|__init__: None\l}"];
      UFuncCodeGenerator -- CodeGenerator [arrowhead=empty];
      UFuncCodeGenerator -- tuple [arrowtail=odiamond];
      UFuncCodeGenerator -- list [arrowtail=odiamond];
      UFuncCodeGenerator -- str [arrowtail=odiamond];
       UFuncCodeGenerator -- str [arrowtail=diamond];
       UFuncCodeGenerator -- list [arrowtail=diamond];

    // class _ChooseUFunc 
    _ChooseUFunc [fillcolor="", shape="record", style="", label="{_ChooseUFunc\n|_cache: dict\l_cfuncs: dict\l_coercions: dict\l_promotionExclusions: dict\l_typerank: list\l|_organize_cfuncs: dict\l__init__: None\l}"];
      _ChooseUFunc -- _UFunc [arrowhead=empty];
      _ChooseUFunc -- int [arrowtail=odiamond];
      _ChooseUFunc -- list [arrowtail=odiamond];
      _ChooseUFunc -- str [arrowtail=odiamond];
      _ChooseUFunc -- None [arrowtail=odiamond];
      _ChooseUFunc -- dict [arrowtail=odiamond];
       _ChooseUFunc -- dict [arrowtail=diamond];
       _ChooseUFunc -- list [arrowtail=diamond];

    // class Tokenizer 
    Tokenizer [fillcolor="", shape="record", style="", label="{Tokenizer\n|index: int\lnext: None,str\lstring: str\l|get: None,str\l__init__: None\lseek: None\ltell: tuple\lmatch: int\l__next: None\l}"];
      Tokenizer -- str [arrowtail=odiamond];
      Tokenizer -- None [arrowtail=odiamond];
      Tokenizer -- int [arrowtail=odiamond];
      Tokenizer -- tuple [arrowtail=odiamond];
       Tokenizer -- int [arrowtail=diamond];
       Tokenizer -- str [arrowtail=diamond];
       Tokenizer -- None [arrowtail=diamond];

    // class _NaryUFunc 
    _NaryUFunc [fillcolor="", shape="record", style="", label="{_NaryUFunc\n|_cache: dict\l_cfuncs: dict\l_coercions: dict\l_promotionExclusions: dict\l_typerank: list\l|__init__: None\l_organize_cfuncs: dict\l_evaltypes: tuple\l?: FloatingType\l_sort_typesigs: list\l}"];
      _NaryUFunc -- _UFunc [arrowhead=empty];
      _NaryUFunc -- int [arrowtail=odiamond];
      _NaryUFunc -- dict [arrowtail=odiamond];
      _NaryUFunc -- str [arrowtail=odiamond];
      _NaryUFunc -- None [arrowtail=odiamond];
      _NaryUFunc -- tuple [arrowtail=odiamond];
      _NaryUFunc -- list [arrowtail=odiamond];
      _NaryUFunc -- FloatingType [arrowtail=odiamond];
       _NaryUFunc -- dict [arrowtail=diamond];
       _NaryUFunc -- list [arrowtail=diamond];

    // class SubPattern 
    SubPattern [fillcolor="", shape="record", style="", label="{SubPattern\n|data: list\lpattern: Pattern\lwidth: None,tuple\l|__getitem__: tuple\l__getslice__: SubPattern\lgetwidth: tuple\l__setitem__: None\lappend: None\l__init__: None\l__len__: int\l}"];
      SubPattern -- Pattern [arrowtail=odiamond];
      SubPattern -- None [arrowtail=odiamond];
      SubPattern -- list [arrowtail=odiamond];
      SubPattern -- tuple [arrowtail=odiamond];
      SubPattern -- long [arrowtail=odiamond];
      SubPattern -- int [arrowtail=odiamond];
      SubPattern -- SubPattern [arrowtail=odiamond];
      SubPattern -- str [arrowtail=odiamond];
       SubPattern -- Pattern [arrowtail=diamond];
       SubPattern -- list [arrowtail=diamond];
       SubPattern -- None [arrowtail=diamond];
       SubPattern -- tuple [arrowtail=diamond];

    // class _MainThread 
    _MainThread [fillcolor="", shape="record", style="", label="{_MainThread\n|_Thread__args: tuple\l_Thread__block: _Condition\l_Thread__daemonic: bool\l_Thread__initialized: bool\l_Thread__kwargs: dict\l_Thread__name: str\l_Thread__started: bool\l_Thread__stderr: file\l_Thread__stopped: bool\l_Thread__target: None\l_Verbose__verbose: bool\l|_set_daemon: bool\l__init__: None\l}"];
      _MainThread -- Thread [arrowhead=empty];
      _MainThread -- None [arrowtail=odiamond];
      _MainThread -- tuple [arrowtail=odiamond];
      _MainThread -- str [arrowtail=odiamond];
      _MainThread -- dict [arrowtail=odiamond];
      _MainThread -- bool [arrowtail=odiamond];
      _MainThread -- module [arrowtail=odiamond];
       _MainThread -- bool [arrowtail=diamond];
       _MainThread -- None [arrowtail=diamond];
       _MainThread -- dict [arrowtail=diamond];
       _MainThread -- tuple [arrowtail=diamond];
       _MainThread -- str [arrowtail=diamond];
       _MainThread -- _Condition [arrowtail=diamond];
       _MainThread -- file [arrowtail=diamond];

    // class _UnaryUFunc 
    _UnaryUFunc [fillcolor="", shape="record", style="", label="{_UnaryUFunc\n|_cache: dict\l_cfuncs: dict\l_coercions: dict\l_promotionExclusions: dict\l_typerank: list\l|__init__: None\l_organize_cfuncs: dict\l_evaltypes: tuple\l?: BooleanType,ComplexType,FloatingType,SignedIntegralType,UnsignedIntegralType\l_sort_typesigs: list\l}"];
      _UnaryUFunc -- _UFunc [arrowhead=empty];
      _UnaryUFunc -- int [arrowtail=odiamond];
      _UnaryUFunc -- dict [arrowtail=odiamond];
      _UnaryUFunc -- str [arrowtail=odiamond];
      _UnaryUFunc -- None [arrowtail=odiamond];
      _UnaryUFunc -- tuple [arrowtail=odiamond];
      _UnaryUFunc -- list [arrowtail=odiamond];
      _UnaryUFunc -- UnsignedIntegralType [arrowtail=odiamond];
      _UnaryUFunc -- ComplexType [arrowtail=odiamond];
      _UnaryUFunc -- SignedIntegralType [arrowtail=odiamond];
      _UnaryUFunc -- FloatingType [arrowtail=odiamond];
      _UnaryUFunc -- BooleanType [arrowtail=odiamond];
       _UnaryUFunc -- dict [arrowtail=diamond];
       _UnaryUFunc -- list [arrowtail=diamond];

    // class Manager 
    Manager [fillcolor="", shape="record", style="", label="{Manager\n|disable: int\lemittedNoHandlerWarning: int\lloggerDict: dict\lroot: RootLogger\l|__init__: None\l}"];
      Manager -- RootLogger [arrowtail=odiamond];
       Manager -- int [arrowtail=diamond];
       Manager -- RootLogger [arrowtail=diamond];
       Manager -- dict [arrowtail=diamond];

    // class ComplexType 
    ComplexType [fillcolor="", shape="record", style="", label="{ComplexType\n|_conv: TypeConverter\l|__init__: None\l}"];
      ComplexType -- NumericType [arrowhead=empty];
      ComplexType -- complex [arrowtail=odiamond];
      ComplexType -- int [arrowtail=odiamond];
      ComplexType -- str [arrowtail=odiamond];
       ComplexType -- TypeConverter [arrowtail=diamond];

    // class RootLogger 
    RootLogger [fillcolor="", shape="record", style="", label="{RootLogger\n|disabled: int\lfilters: list\lhandlers: list\llevel: int\lname: str\lparent: None\lpropagate: int\l|__init__: None\l}"];
      RootLogger -- Logger [arrowhead=empty];
      RootLogger -- int [arrowtail=odiamond];
      RootLogger -- str [arrowtail=odiamond];
       RootLogger -- list [arrowtail=diamond];
       RootLogger -- str [arrowtail=diamond];
       RootLogger -- None [arrowtail=diamond];
       RootLogger -- int [arrowtail=diamond];


}
